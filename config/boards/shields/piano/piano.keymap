#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define AL1  0
#define AL2  1
#define SM1  2
#define SM2  3
#define NM1  4
#define SYS  5
#define BT   6
/ {
    combos {
        compatible = "zmk,combos";
        combo_ret {
            timeout-ms = <30>;
            key-positions = <3 4>;
            bindings = <&kp RET>;
            layers = <AL1>;
        };
        combo_del {
            timeout-ms = <30>;
            key-positions = <4 5>;
            bindings = <&kp BSPC>;
            layers = <AL1>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
            layers = <AL1>;
        };
        combo_esc {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            layers = <AL1>;
        };
        combo_bt  {
            timeout-ms = <30>;
            key-positions = <0 1 2>;
            bindings = <&to BT>;
            layers = <SYS>; 
        };
        combo_bt_exit {
            timeout-ms = <30>;
            key-positions = <0 1 2>;
            bindings = <&to AL1>;
            layers = <BT>;
        };
    };
    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hl_l: homerow_layers_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        hl_r: homerow_layers_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        alpha2macro: behavior_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = < &sl AL2 >;
        };
    };
//				0		1		2						3		4		5
//		6		7		8		9						10		11		12		13
//								14		15		16		17
    keymap {
        compatible = "zmk,keymap";
		alpha1 {
		bindings = <
		 			&hm_l LGUI B	&hm_l LALT G	&hm_l LCTRL R						&hm_r RCTRL U 	&hm_r RALT I	&hm_r RGUI O
		&hl_l NM1 A	&hl_l SM2 S		&hl_l SM1 D		&hl_l SYS F							&hl_r SYS J		&hl_r SM1 K		&hl_r SM2 L		&hl_r NM1 SEMI
			 	 		 							&mo AL2	&caps_word		&kp RSHIFT	&kp SPC
		>;
		};

		alpha2 {
		bindings = <
		 			&hm_l LGUI W	&hm_l LALT E	&hm_l LCTRL T				&hm_r RCTRL Y 	&hm_r RALT H	&hm_r RGUI P
		&hl_l NM1 N	&hl_l SM2 X		&hl_l SM1 C		&hl_l SYS V					&hl_r SYS M		&hl_r SM1 COMMA	&hl_r SM2 DOT	&hl_r NM1 FSLH
			 	 									&none	&trans		&trans	&trans
		>;
		};

		sym1 {
		bindings = <
		 			&hm_l LGUI PRCNT	&hm_l LALT HASH	&hm_l LCTRL DLLR					&hm_r RCTRL GRAVE	&hm_r RALT CARET	&hm_r RGUI BSLH
		&kp ATSN	&kp TILDE			&kp AMPS		&kp STAR							&kp MINUS			&kp EQUAL			&kp LPAR		&kp RPAR
				 										&kp EXCL	&kp LBRC		&trans	&trans
		>;
		};

		sym2 {
		bindings = <
		 		&hm_l LGUI Q	&hm_l LALT RS(Q)	&hm_l LCTRL GRAVE				&hm_r RCTRL RS(W)	&hm_r RALT RS(E)	&hm_r RGUI Z
		&trans	&trans			&trans				&kp LBKT						&trans				&trans				&trans		&kp RS(Z)
			 										&trans	&trans			&trans	&trans
		>;
		};

		num {
		bindings = <
					&hm_l LGUI E	&hm_l LALT N0	&hm_l LCTRL N1					&hm_r RCTRL N2	&hm_r RALT N3	&hm_r RGUI N4
		&kp SQT		&kp RBRC		&kp N5			&kp N6							&kp N7			&kp N8			&kp N9		&kp RBKT
													&trans		&trans		&trans	&trans
		>;
		};

		sys {
		bindings = <
				&kp LA(LS(TAB))	&kp RA(TAB)	&kp PG_UP								&kp LEFT	&kp UP		&kp RIGHT
		&trans	&trans			&trans		&kp PG_DN								&kp LEFT	&kp DOWN	&kp RIGHT	&kp RET
		 		 							&kp C_PREV	&kp C_PP		&kp C_PP	&kp C_NEXT
		>;
		};

		bt {
		bindings = <
					&bt BT_PRV	&bt BT_NXT	&trans							&trans	&trans	&trans
		&bootloader	&trans		&trans		&trans							&trans	&trans	&trans	&bt BT_CLR
		 	 	 							&to AL1		&none		&none	&none
		>;
		};
	};
};
